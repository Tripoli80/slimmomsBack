{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.1",
        "title": "SlimMom API Docs",
        "description": "Endpoints for front-end",
        "license": {
            "name": "MIT"
        }
    },
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "servers":[
        {
            "url": "http://localhost:3008/", 
            "description": "Local server"
            },
            {
            "url": "https://creepy-tan-parrot.cyclic.app/", 
            "description": "Main server"
            }
        ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authentification user's"
        },
        {
            "name": "Products",
            "description": "List of products for user"
        },
         {
            "name": "Diet",
            "description": "Diet for user"
        },
        {
            "name": "Daily products",
            "description": "Products list for one day"
        }
    ],
    "paths": {
        "/api/users/signup": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Regitrations object",
                    "required": true,
                    "content": {
                        "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/RegistrationsRequest"
                            }
                        }
                    }
                },
                "responses" : {
                    "201" : {
                        "description": "Succesfully created",
                        "content" : {
                             "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/RegistrationsResponse"
                             }
                        }
                        }
                    },
                    "400" : {
                        "description": "Bad request",
                        "content" : {}
                    },
                    "409" : {
                        "description": "Provided email alredy esixts",
                        "content" : {}
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": ["Auth"],
                "produces": [
          "application/json"
        ],
                "summary": "User login",
                "parameters": [],
                "requestBody": {
                    "description": "Login object",
                    "required": true,
                    "content": {
                        "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description": "Ok",
                        "content" : {
                             "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/LoginResponse"
                             }
                        }
                        }
                    },
                    "401" : {
                        "description": "Unauthorized",
                        "content" : {}
                    },
                    "404" : {
                        "description": "User not found",
                        "content" : {}
                    }
                }
            }
        },
        "/api/users/refresh": {
            "post": {
                "tags": ["Auth"],
                "produces": [
          "application/json"
        ],
                "summary": "Refresh token",
                "parameters": [],
                "security":[{"Bearer":[]}],
                "responses" : {
                    "200" : {
                        "description": "Ok",
                        "content" : {
                             "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/LoginResponse"
                             }
                        }
                        }
                    },
                    "401" : {
                        "description": "Unauthorized",
                        "content" : {}
                    },
                    "404" : {
                        "description": "User not found",
                        "content" : {}
                    }
                }
            }
        },
        "/api/users/logout": {
            "get": {
                "tags": ["Auth"],
                "summary": "User logout",
                "parameters": [],
                "security": [{"Bearer":[]}],
                "responses" : {
                    "204" : {
                        "description": "Succesfull",
                        "content" : {}
                    },
                    "401" : {
                        "description": "Unauthorized",
                        "content" : {}
                    },
                     "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "tags": ["Auth"],
                "summary": "Update user subscription ",
                "parameters": [],
                "security": [{"Bearer":[]}],
                "responses" : {
                    "200" : {
                        "description": "Succesfull",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/CurrentResponse"
                            }
                        }
                        }
                    },
                    "401" : {
                        "description": "Unauthorized",
                        "content" : {}
                    },
                         "404": {
            "description": "Not Found",
            "content": {}
          }          
                }
            }
        },
        "/api/users/mailtoreset": {
            "post": {
                "tags": ["Auth"],
                "summary": "Reset Email",
                "parameters": [],
                "requestBody": {
                 "description": "Email object",
                 "required": true,
                 "content":{
                    "application/json": {
                        "schema": {
                            "$ref":"#/components/schemas/MailToResetRequest"
                        }
                    }
                 }
                },
                "responses" : {
                    "200" : {
                        "description": "Verification email sent",
                        "content" : {}
                    },
                    "400" : {
                        "description": "Email or password wrong",
                        "content" : {}
                    }
                }
            }
        },
        "/api/users/checktoreset": {
            "post": {
                "tags": ["Auth"],
                "summary": "Check token for reset",
                "parameters": [],
                "requestBody": {
                 "description": "Email object",
                 "required": true,
                 "content":{
                    "application/json": {
                        "schema": {
                            "$ref":"#/components/schemas/TokenVerification"
                        }
                    }
                 }
                },
                "responses" : {
                    "200" : {
                        "description": "Token is valid",
                        "content" : {
                            "application/json" :{
                                "message": "Token is valid"
                            }
                        }
                    },
                    "404" : {
                        "description": "Token is wrong",
                        "content" : {}
                    }
                }
            }
        },
        "/api/users/reset": {
            "post": {
                "tags": ["Auth"],
                "summary": "Reset password",
                "parameters": [],
                "requestBody": {
                 "description": "Reset password object",
                 "required": true,
                 "content":{
                    "application/json": {
                        "schema": {
                            "$ref":"#/components/schemas/RessetPasssworRequest"
                        }
                    }
                 }
                },
                "responses" : {
                    "200" : {
                        "description": "Succesfull password change",
                        "content" : {
                            "application/json" :{
                                "message": "Password sucsess changed"
                            }
                        }
                    },
                    "400" : {
                        "description": "Bad Request (password length)",
                        "content" : {}
                    },
                    "404" : {
                        "description": "Token is wrong",
                        "content" : {}
                    }
                }
            }
        },
        "/api/products/": {
            "get": {
                "tags": ["Products"],
                "summary": "All products",
                "parameters": [],
                "responses" : {
                    "200" : {
                        "description": "List of all products",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/AllProductsResponse"
                            }
                        }
                        }
                    },
                         "404": {
            "description": "Not Found",
            "content": {}
          }          
                }
            },
            "post": {
                "tags": ["Products"],
                "summary": "Create product",
                "parameters": [],
                "security": [{"Bearer":[]}],
                "requestBody":{
                    "description": "Create product",
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/CreateProduct"
                            }
                        }
                    }
                },
                "responses" : {
                    "201" : {
                        "description": "Create product",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/CreateProduct"
                            }
                        }
                        }
                    },
                         "401": {
            "description": "Unauthorized",
            "content": {}
          }          
                }
            }
        },  
        "/api/diet/": {
            "post": {
                "tags": ["Diet"],
                "summary": "Diet for non auth users",
                "parameters": [],
                "requestBody": {
                 "description": "User body params",
                 "required": true,
                 "content" :{
                    "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/DietRequest"
                             }
                        }
                 }
                },
                "responses" : {
                    "200" : {
                        "description": "Succesfull",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/DietResponse"
                            }
                        }
                        }
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          }          
                }
            }
        },
        "/api/diet": {
            "post": {
                "tags": ["Diet"],
                "summary": "Diet for auth users",
                "parameters": [],
                "security": [{"Bearer": []}],
                "requestBody": {
                 "description": "User body params",
                 "required": true,
                 "content" :{
                    "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/DietRequest"
                             }
                        }
                 }
                },
                "responses" : {
                    "200" : {
                        "description": "Succesfull",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/DietResponse"
                            }
                        }
                        }
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          }          
                }
            },
            "get": {
                "tags": ["Diet"],
                "summary": "User diet",
                "parameters": [],
                "security": [{"Bearer": []}],
                "responses" : {
                    "200" : {
                        "description": "Succesfull",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/AllDietResponse"
                            }
                        }
                        }
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          }   ,
                       "401": {
            "description": "Unauthorized",
            "content": {}
          }   
                }
            }
        },
        "/api/diet/all": {
            "get": {
                "tags": ["Diet"],
                "summary": "List of users diets",
                "parameters": [],
                "security": [{"Bearer": []}],
                "responses" : {
                    "200" : {
                        "description": "Succesfull",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/OneDietResponse"
                            }
                        }
                        }
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          }   ,
                       "401": {
            "description": "Unauthorized",
            "content": {}
          }   
                }
            }
        },
        "/api/daily/addeated": {
            "post": {
                "tags": ["Daily products"],
                "summary": "Daily products",
                "parameters": [],
                "security": [{"Bearer":[]}],
                "requestBody": {
                 "description": "Product to add",
                 "required": true,
                 "content" :{
                    "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/DailyProductsRequest"
                             }
                        }
                 }
                },
                "responses" : {
                    "200" : {
                        "description": "Succesfull",
                        "content" : {
                            "application/json" : {
                            "schema" :{
                                    "$ref": "#/components/schemas/DailyProductsResponse"
                            }
                        }
                        }
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          }                             
                }
            }
        },
        "/api/daily/{eatedId}" :{
            "delete": {
                "tags": ["Daily products"],
                "summary": "Daily products",
                "parameters": [
                    {
"name": "eatedId",
"in": "path",
"description": "product id to delete",
"required": true,
"type": "string"
}
                ],
                "security": [{"Bearer":[]}],
                "responses" : {
                    "204" : {
                        "description": "Succesfull deleted",
                        "content" : {}
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          }                             
                }
            }
        },
        "/api/daily/" :{
            "get": {
                "tags": ["Daily products"],
                "summary": "Daily products, find products by date",
                "parameters": [
                    {
"name": "date",
"in": "query",
"description": "Date",
"required": true,
"type": "string",
"example":"12.12.2022"
}
                ],
                "security": [{"Bearer":[]}],
                "responses" : {
                    "200" : {
                        "description": "Succesfull deleted",
                        "content" : {
                             "application/json" : {
                             "schema" :{
                                    "$ref": "#/components/schemas/GetProductByDate"
                             }
                        }
                        }
                    },
                         "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          }                             
                }
            }
        }
    },
    "components": {
        "schemas" :{
            "RegistrationsRequest" : {
                "type": "object",
                "required": ["email", "name", "password"],
                "properties" : {
                "email" : {
                    "type": "string",
                    "description" : "User email",
                    "format": "email"
                },
                "password" : {
                    "type": "string",
                    "description" : "User password",
                    "example": "password123"
                },
                "username" : {
                    "type": "string",
                    "description" : "User name",
                    "example": "John Dou"
                }
            }
            },
            "RegistrationsResponse" : {
                "type": "object",
                  "properties" : {
                    "email" : {
                        "type": "string",
                        "description" : "User email",
                        "format": "email"
                },
                    "username" : {
                        "type": "string",
                        "description" : "User name",
                        "example": "John Dou"
                },
                 "verificationToken" : {
                    "type": "string",
                    "description" : "verificationToken",
                    "example": "dfktunktuvd"
                }
            }
            },
             "LoginRequest" : {
                "type": "object",
                "required": ["email", "password"],
                "properties" : {
                "email" : {
                    "type": "string",
                    "description" : "User email",
                    "format": "email"
                },
                "password" : {
                    "type": "string",
                    "description" : "User password",
                    "example": "password123"
                }
            }
            },
             "LoginResponse" : {
                "type": "object",
                "required": ["email", "token"],
                "properties" : {
                     "token" : {
                    "type": "string",
                    "description" : "Token",
                    "example": "some.Token.123"
                },
                "user" :{
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "format":"email"
                        },
                        "username": {
                            "type": "string",
                            "format":"John Dou"
                        }
                    }
                }
            }
            },
            "MailToResetRequest": {
                "type": "object",
                "required": ["email"],
                "properties" : {
                "email" : {
                    "type": "string",
                    "description" : "User email",
                    "format": "email"
                }}
            },
            "TokenVerification":{
                "type": "object",
                "required": ["token"],
                "properties" : {
                "token" : {
                    "type": "string",
                    "description" : "Reset token",
                    "example": "someToken"
                }}
            },         
             "CurrentResponse" : {
             "type": "object",
                "required": ["email","username","_id"],
                "properties" : {
                 "username" : {
                    "type": "string",
                    "description" : "username",
                    "example": "someUser123"
                },
                "email" : {
                    "type": "string",
                    "description" : "User email",
                    "format": "email"
                },
                "_id" : {
                    "type": "string",
                    "description" : "User ID",
                    "example":"9379992a"
                }
            }
            },
             "AllProductsResponse" : {
             "type": "array",
             "items": {
                "type": "object",
                "properties": {
                "title": {
                "type" :"object",
                "properties" :{
                 "ru": {
                   "type": "string",
                   "description": "The name of the product in a foreign language",
                "example": "Яйцо куриное"
                 },
                 "ua": {
                   "type": "string",
                   "description": "The name of the product in a foreign language",
                "example": "Яйцe куряче"
                 }
                }
    },
    "_id": {
        "type": "number",
        "example": "5d51694802b2373622ff553b"
    },
    "categories": {
      "type": "array",
      "items": {
        "type":"string",
        "example": "яйце"
      }
    },
    "calories": {
        "type": "number",
        "example": "625"
    }
                }
             }
            },
            "DietRequest": {
             "type": "object",
             "properties": {
                "blood": {
                    "type": "number",
                    "description": "Blood type number",
                    "example": 2
                },
                "age": {
                    "type": "number",
                    "description": "User age",
                    "example": 27
                },
                "height": {
                    "type": "number",
                    "description": "User height",
                    "example": 181
                },
                "cWeight": {
                    "type": "number",
                    "description": "User cWeight",
                    "example": 95
                },
                "dWeight": {
                    "type": "number",
                    "description": "User dWeight",
                    "example": 86
                }
             }
            },
            "DietResponse": {
                "type": "object",
                "properties": {
                    "dailyCalories": {
                        "type": "number",
                        "description": "User calories for 1 day",
                        "example": 1871
                    },
                    "products" : {
                          "type": "array",
             "items": {
                "type": "object",
                "properties": {
                "title": {
                "type" :"object",
                "properties" :{
                 "ru": {
                   "type": "string",
                   "description": "The name of the product in a foreign language",
                "example": "Яйцо куриное"
                 },
                 "ua": {
                   "type": "string",
                   "description": "The name of the product in a foreign language",
                "example": "Яйцe куряче"
                 }
                }
    },
    "_id": {
        "type": "number",
        "example": "5d51694802b2373622ff553b"
    },
    "categories": {
      "type": "array",
      "items": {
        "type":"string",
        "example": "яйце"
      }
    },
    "calories": {
        "type": "number",
        "example": "625"
    }
                }
             }
                    }
                }
            },
            "DailyProductsRequest": {
                "type": "object",
                "properties" :{
                    "product": {
                        "type": "string",
                        "description": "Product for adding",
                        "example":"5d51694802b2373622ff554d"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of eated product",
                        "example": 121
                    },
                    "date" :{
                        "type": "string",
                        "description": "Date when user add product",
                        "example": "12.12.2022"
                    }
                }
            },
            "DailyProductsResponse": {
              "type": "object",
              "properties": {
                "_id": {
                    "type": "string",
                    "description": "User ID in DB",
                    "example": "63a9faa1f92d186a59b53c7c"
                },
        "weight":{
            "type": "number",
            "description": "Weight of eated product",
            "example": 100
        } ,
    "owner": {
        "type": "string",
        "description": "User ID",
        "example": "639faf16c75afa1fe591a84a"
    },
    "product": {
        "type": "object",
        "properties" :{
        "categories": {
            "type": "object",
            "properties" : {
                "ru": {
                    "type":"string",
                    "example": "зерновыу"
                },
            "deu": {
                "type": "string",
                "example": "Körner"
            },
            "en": {
                "type":"string",
                "example": "grains"
            },
            "ua": {
                "type": "string",
                "example": "зернові"
            }
            }
        },
        "title": {
            "type": "object",
            "properties": {
"ru": {
    "type": "string",
    "example": "Горох маш Ярмарка Платинум"
},
            "ua": {
                "type": "string",
                "example": "Горох маш Ярмарка Платинум"
            },
            "en": {
                "type": "string",
                "example": "Platinum Fair Mung Peas"
            },
            "deu": {
                "type": "string",
                "example": "Mungbohnen Fair Trade Platinum"
            }
            }
        },
        "_id": {
            "type":"string",
            "description": "Product ID",
            "example": "5d51694802b2373622ff554d"
        },
        "weight": {
            "type": "number",
            "example": 100
        },
        "calories": {
            "type": "number",
            "example": 312
        },
        "groupBloodNotAllowed":{
            "type": "array",
            "items": {
                "null":null,
                "true": true,
                "false": false
            }
        },
        "__v": {
            "type":"number",
            "example": 0
        }
        }
    },
    "intakeCalories": {
        "type": "number",
        "example": 312
    }
              }
            },
            "AllDietResponse" :{
               "type": "array",
               "items": {
                 "type": "object",
              "properties": {
                "owner": {
                        "type": "string",
                        "description": "owner name",
                        "example":"John Dou"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product fo adding",
                        "example":"Яйцe куряче"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of eated product",
                        "example": 121
                    },
                    "date" :{
                        "type": "string",
                        "description": "Date when user add product",
                        "example": "12.12.2022"
                    }
              },
                "owner": {
                        "type": "string",
                        "description": "owner name",
                        "example":"John Dou"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product fo adding",
                        "example":"Яйцe куряче"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of eated product",
                        "example": 121
                    },
                    "date" :{
                        "type": "string",
                        "description": "Date when user add product",
                        "example": "12.12.2022"
                    }
               }
            },
             "OneDietResponse" :{
               
                 "type": "object",
              "properties": {
                "owner": {
                        "type": "string",
                        "description": "owner name",
                        "example":"John Dou"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product fo adding",
                        "example":"Яйцe куряче"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of eated product",
                        "example": 121
                    },
                    "date" :{
                        "type": "string",
                        "description": "Date when user add product",
                        "example": "12.12.2022"
                    }
              }
            },
            "GetProductByDate": {
                "type": "array",
                "items": {
                     "type": "object",
              "properties": {
                "_id": {
                    "type": "string",
                    "description": "User ID in DB",
                    "example": "63a9faa1f92d186a59b53c7c"
                },
        "weight":{
            "type": "number",
            "description": "Weight of eated product",
            "example": 100
        } ,
    "owner": {
        "type": "string",
        "description": "User ID",
        "example": "639faf16c75afa1fe591a84a"
    },
    "product": {
        "type": "object",
        "properties" :{
        "categories": {
            "type": "object",
            "properties" : {
                "ru": {
                    "type":"string",
                    "example": "зерновыу"
                },
            "deu": {
                "type": "string",
                "example": "Körner"
            },
            "en": {
                "type":"string",
                "example": "grains"
            },
            "ua": {
                "type": "string",
                "example": "зернові"
            }
            }
        },
        "title": {
            "type": "object",
            "properties": {
"ru": {
    "type": "string",
    "example": "Горох маш Ярмарка Платинум"
},
            "ua": {
                "type": "string",
                "example": "Горох маш Ярмарка Платинум"
            },
            "en": {
                "type": "string",
                "example": "Platinum Fair Mung Peas"
            },
            "deu": {
                "type": "string",
                "example": "Mungbohnen Fair Trade Platinum"
            }
            }
        },
        "_id": {
            "type":"string",
            "description": "Product ID",
            "example": "5d51694802b2373622ff554d"
        },
        "weight": {
            "type": "number",
            "example": 100
        },
        "calories": {
            "type": "number",
            "example": 312
        },
        "groupBloodNotAllowed":{
            "type": "array",
            "items": {
                "null":null,
                "true": true,
                "false": false
            }
        },
        "__v": {
            "type":"number",
            "example": 0
        }
        }
    },
    "intakeCalories": {
        "type": "number",
        "example": 312
    }
              }
                }
            },
            "CreateProduct": {
                "type":"object",
                "properties":{
                    "title": {
                        "type": "string",
                        "required": true,
                        "example": "Roasted potato"
                    },
                    "categories": {
                        "type": "string",
                        "required": true,
                        "example": "Potatos"
                    },
                    "weight": {
                        "type": "number",
                        "required": true,
                        "example": 200
                    },
                    "calories": {
                        "type": "number",
                        "required": true,
                        "example": 1000
                    },
                    "owner": {
                        "type": "string",
                        "description": "owner id",
                        "example":"9379992"
                    },
                    "_id": {
                        "type": "string",
                        "description": "owner id",
                        "example":"9379992"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time of creation",
                        "example":"2022-12-26T23:16:04.939Z"
                    }
                }
            },
            "RessetPasssworRequest": {
                "type": "object",
                "required": ["password", "token"],
                "properties" :{
                    "password" : {
                        "type": "string",
                        "description" : "New password",
                        "example" : "password123"
                    },
                    "token" : {
                        "type" : "string",
                        "description": "verification Token",
                        "example": "5d51694802b2373622ff553b"
                    }
                }
            }
        },
        "securitySchemes" : {
            "Bearer" : {
                "type": "http",
                "scheme" : "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}